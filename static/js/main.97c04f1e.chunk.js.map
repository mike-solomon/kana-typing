{"version":3,"sources":["fixtures/constants.js","components/KanaDisplay/KanaDisplay.js","components/TypingBar/TypingBar.js","components/App/App.js","index.js"],"names":["module","exports","hiraganaToValidRomajiMap","あ","い","う","え","お","か","き","く","け","こ","きゃ","きゅ","きょ","KanaDisplay","className","Text","size","content","max","Object","keys","length","rand","Math","floor","random","getRandomKana","TypingBar","useState","count","setCount","value","setValue","Input","fluid","onChange","event","target","console","log","App","ReactDOM","render","StrictMode","Provider","theme","teamsTheme","document","getElementById"],"mappings":"mGAgBAA,EAAOC,QAAU,CACfC,yBAjB+B,CAC/BC,SAAG,CAAC,KACJC,SAAG,CAAC,KACJC,SAAG,CAAC,KACJC,SAAG,CAAC,KACJC,SAAG,CAAC,KACJC,SAAG,CAAC,MACJC,SAAG,CAAC,MACJC,SAAG,CAAC,MACJC,SAAG,CAAC,MACJC,SAAG,CAAC,MACJC,eAAI,CAAC,OACLC,eAAI,CAAC,OACLC,eAAI,CAAC,U,uNCSQC,EAhBK,WASlB,OACE,yBAAKC,UAAU,eACb,kBAACC,EAAA,EAAD,CAAMC,KAAK,SAASC,QAVF,WACpB,IACMC,EAAMC,OAAOC,KAAKrB,4BAA0BsB,OAAS,EACrDC,EAAOC,KAAKC,MAAMD,KAAKE,UAAYP,EAF7B,EAEyC,GAFzC,GAIZ,OAAOC,OAAOC,KAAKrB,4BAA0BuB,GAKdI,O,2BCepBC,EA1BG,WAAO,IAAD,EACIC,mBAAS,GADb,mBACfC,EADe,KACRC,EADQ,OAEIF,mBAAS,IAFb,mBAEfG,EAFe,KAERC,EAFQ,KAetB,OACE,yBAAKlB,UAAU,aACb,kBAACmB,EAAA,EAAD,CAAOC,OAAK,EAACH,MAAOA,EAAOI,SAbX,SAACC,GACnBJ,EAASI,EAAMC,OAAON,OACtBD,EAASM,EAAMC,OAAON,MAAMV,QAED,SAAvBe,EAAMC,OAAON,QACfO,QAAQC,IAAI,UACZP,EAAS,IACTF,EAAS,OAOT,yBAAKhB,UAAU,cACb,0CAAgBe,EAAhB,0BACA,0CAAgBE,EAAhB,mBCROS,MAZf,WACE,OACE,yBAAK1B,UAAU,OACb,4BAAQA,UAAU,cAChB,2CAEF,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,eCLN2B,EAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACC,EAAA,EAAD,CAAUC,MAAOC,KACf,kBAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.97c04f1e.chunk.js","sourcesContent":["const hiraganaToValidRomajiMap = {\n  あ: [\"a\"],\n  い: [\"i\"],\n  う: [\"u\"],\n  え: [\"e\"],\n  お: [\"o\"],\n  か: [\"ka\"],\n  き: [\"ki\"],\n  く: [\"ku\"],\n  け: [\"ke\"],\n  こ: [\"ko\"],\n  きゃ: [\"kya\"],\n  きゅ: [\"kyu\"],\n  きょ: [\"kyo\"],\n};\n\nmodule.exports = {\n  hiraganaToValidRomajiMap,\n};\n","import \"./KanaDisplay.scss\";\n\nimport React from \"react\";\nimport { Text } from \"@fluentui/react-northstar\";\nimport { hiraganaToValidRomajiMap } from \"../../fixtures/constants\";\n\nconst KanaDisplay = () => {\n  const getRandomKana = () => {\n    const min = 0;\n    const max = Object.keys(hiraganaToValidRomajiMap).length - 1;\n    const rand = Math.floor(Math.random() * (max - min + 1) + min);\n\n    return Object.keys(hiraganaToValidRomajiMap)[rand];\n  };\n\n  return (\n    <div className='KanaDisplay'>\n      <Text size='larger' content={getRandomKana()} />\n    </div>\n  );\n};\n\nexport default KanaDisplay;\n","import \"./TypingBar.scss\";\n\nimport React, { useState } from \"react\";\n\nimport { Input } from \"@fluentui/react-northstar\";\n\nconst TypingBar = () => {\n  const [count, setCount] = useState(0);\n  const [value, setValue] = useState(\"\");\n\n  const recalculate = (event) => {\n    setValue(event.target.value);\n    setCount(event.target.value.length);\n\n    if (event.target.value === \"heyo\") {\n      console.log(\"winnar\");\n      setValue(\"\");\n      setCount(0);\n    }\n  };\n\n  return (\n    <div className='TypingBar'>\n      <Input fluid value={value} onChange={recalculate} />\n      <div className='RandomInfo'>\n        <p>You entered {count} amount of characters.</p>\n        <p>You entered {value} characters.</p>\n      </div>\n    </div>\n  );\n};\n\nexport default TypingBar;\n","import \"./App.scss\";\n\nimport KanaDisplay from \"../KanaDisplay/KanaDisplay\";\nimport React from \"react\";\nimport TypingBar from \"../TypingBar/TypingBar\";\n\nfunction App() {\n  return (\n    <div className='App'>\n      <header className='App-header'>\n        <p>Kana Typing</p>\n      </header>\n      <KanaDisplay />\n      <TypingBar />\n    </div>\n  );\n}\n\nexport default App;\n","// import \"./index.scss\";\n\nimport { Provider, teamsTheme } from \"@fluentui/react-northstar\";\n\nimport App from \"./components/App/App\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider theme={teamsTheme}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}